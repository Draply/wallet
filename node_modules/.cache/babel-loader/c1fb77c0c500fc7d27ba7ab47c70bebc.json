{"ast":null,"code":"import { PreconditionFailure } from '../precondition/PreconditionFailure.js';\nimport { runIdToFrequency } from './IRawProperty.js';\nimport { readConfigureGlobal } from '../runner/configuration/GlobalParameters.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { noUndefinedAsContext, UndefinedContextPlaceholder } from '../../arbitrary/_internals/helpers/NoUndefinedAsContext.js';\nexport class Property {\n  constructor(arb, predicate) {\n    this.arb = arb;\n    this.predicate = predicate;\n    const {\n      beforeEach = Property.dummyHook,\n      afterEach = Property.dummyHook,\n      asyncBeforeEach,\n      asyncAfterEach\n    } = readConfigureGlobal() || {};\n\n    if (asyncBeforeEach !== undefined) {\n      throw Error('\"asyncBeforeEach\" can\\'t be set when running synchronous properties');\n    }\n\n    if (asyncAfterEach !== undefined) {\n      throw Error('\"asyncAfterEach\" can\\'t be set when running synchronous properties');\n    }\n\n    this.beforeEachHook = beforeEach;\n    this.afterEachHook = afterEach;\n  }\n\n  isAsync() {\n    return false;\n  }\n\n  generate(mrng, runId) {\n    const value = this.arb.generate(mrng, runId != null ? runIdToFrequency(runId) : undefined);\n    return noUndefinedAsContext(value);\n  }\n\n  shrink(value) {\n    if (value.context === undefined && !this.arb.canShrinkWithoutContext(value.value_)) {\n      return Stream.nil();\n    }\n\n    const safeContext = value.context !== UndefinedContextPlaceholder ? value.context : undefined;\n    return this.arb.shrink(value.value_, safeContext).map(noUndefinedAsContext);\n  }\n\n  run(v) {\n    this.beforeEachHook();\n\n    try {\n      const output = this.predicate(v);\n      return output == null || output === true ? null : {\n        error: undefined,\n        errorMessage: 'Property failed by returning false'\n      };\n    } catch (err) {\n      if (PreconditionFailure.isFailure(err)) return err;\n\n      if (err instanceof Error && err.stack) {\n        return {\n          error: err,\n          errorMessage: `${err}\\n\\nStack trace: ${err.stack}`\n        };\n      }\n\n      return {\n        error: err,\n        errorMessage: String(err)\n      };\n    } finally {\n      this.afterEachHook();\n    }\n  }\n\n  beforeEach(hookFunction) {\n    const previousBeforeEachHook = this.beforeEachHook;\n\n    this.beforeEachHook = () => hookFunction(previousBeforeEachHook);\n\n    return this;\n  }\n\n  afterEach(hookFunction) {\n    const previousAfterEachHook = this.afterEachHook;\n\n    this.afterEachHook = () => hookFunction(previousAfterEachHook);\n\n    return this;\n  }\n\n}\n\nProperty.dummyHook = () => {};","map":{"version":3,"sources":["U:/NFT-Mar/faucet/node_modules/fast-check/lib/esm/check/property/Property.generic.js"],"names":["PreconditionFailure","runIdToFrequency","readConfigureGlobal","Stream","noUndefinedAsContext","UndefinedContextPlaceholder","Property","constructor","arb","predicate","beforeEach","dummyHook","afterEach","asyncBeforeEach","asyncAfterEach","undefined","Error","beforeEachHook","afterEachHook","isAsync","generate","mrng","runId","value","shrink","context","canShrinkWithoutContext","value_","nil","safeContext","map","run","v","output","error","errorMessage","err","isFailure","stack","String","hookFunction","previousBeforeEachHook","previousAfterEachHook"],"mappings":"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","sourcesContent":["import { PreconditionFailure } from '../precondition/PreconditionFailure.js';\nimport { runIdToFrequency } from './IRawProperty.js';\nimport { readConfigureGlobal } from '../runner/configuration/GlobalParameters.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { noUndefinedAsContext, UndefinedContextPlaceholder, } from '../../arbitrary/_internals/helpers/NoUndefinedAsContext.js';\nexport class Property {\n    constructor(arb, predicate) {\n        this.arb = arb;\n        this.predicate = predicate;\n        const { beforeEach = Property.dummyHook, afterEach = Property.dummyHook, asyncBeforeEach, asyncAfterEach, } = readConfigureGlobal() || {};\n        if (asyncBeforeEach !== undefined) {\n            throw Error('\"asyncBeforeEach\" can\\'t be set when running synchronous properties');\n        }\n        if (asyncAfterEach !== undefined) {\n            throw Error('\"asyncAfterEach\" can\\'t be set when running synchronous properties');\n        }\n        this.beforeEachHook = beforeEach;\n        this.afterEachHook = afterEach;\n    }\n    isAsync() {\n        return false;\n    }\n    generate(mrng, runId) {\n        const value = this.arb.generate(mrng, runId != null ? runIdToFrequency(runId) : undefined);\n        return noUndefinedAsContext(value);\n    }\n    shrink(value) {\n        if (value.context === undefined && !this.arb.canShrinkWithoutContext(value.value_)) {\n            return Stream.nil();\n        }\n        const safeContext = value.context !== UndefinedContextPlaceholder ? value.context : undefined;\n        return this.arb.shrink(value.value_, safeContext).map(noUndefinedAsContext);\n    }\n    run(v) {\n        this.beforeEachHook();\n        try {\n            const output = this.predicate(v);\n            return output == null || output === true\n                ? null\n                : { error: undefined, errorMessage: 'Property failed by returning false' };\n        }\n        catch (err) {\n            if (PreconditionFailure.isFailure(err))\n                return err;\n            if (err instanceof Error && err.stack) {\n                return { error: err, errorMessage: `${err}\\n\\nStack trace: ${err.stack}` };\n            }\n            return { error: err, errorMessage: String(err) };\n        }\n        finally {\n            this.afterEachHook();\n        }\n    }\n    beforeEach(hookFunction) {\n        const previousBeforeEachHook = this.beforeEachHook;\n        this.beforeEachHook = () => hookFunction(previousBeforeEachHook);\n        return this;\n    }\n    afterEach(hookFunction) {\n        const previousAfterEachHook = this.afterEachHook;\n        this.afterEachHook = () => hookFunction(previousAfterEachHook);\n        return this;\n    }\n}\nProperty.dummyHook = () => { };\n"]},"metadata":{},"sourceType":"module"}
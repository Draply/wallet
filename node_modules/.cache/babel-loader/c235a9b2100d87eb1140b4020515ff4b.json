{"ast":null,"code":"import { option } from '../../option.js';\nimport { tuple } from '../../tuple.js';\nimport { extractEnumerableKeys } from '../helpers/EnumerableKeysExtractor.js';\nimport { buildValuesAndSeparateKeysToObjectMapper, buildValuesAndSeparateKeysToObjectUnmapper } from '../mappers/ValuesAndSeparateKeysToObject.js';\nconst noKeyValue = Symbol('no-key');\nexport function buildPartialRecordArbitrary(recordModel, requiredKeys) {\n  const keys = extractEnumerableKeys(recordModel);\n  const arbs = [];\n\n  for (let index = 0; index !== keys.length; ++index) {\n    const k = keys[index];\n    const requiredArbitrary = recordModel[k];\n    if (requiredKeys === undefined || requiredKeys.indexOf(k) !== -1) arbs.push(requiredArbitrary);else arbs.push(option(requiredArbitrary, {\n      nil: noKeyValue\n    }));\n  }\n\n  return tuple(...arbs).map(buildValuesAndSeparateKeysToObjectMapper(keys, noKeyValue), buildValuesAndSeparateKeysToObjectUnmapper(keys, noKeyValue));\n}","map":{"version":3,"sources":["U:/NFT-Mar/faucet/node_modules/fast-check/lib/esm/arbitrary/_internals/builders/PartialRecordArbitraryBuilder.js"],"names":["option","tuple","extractEnumerableKeys","buildValuesAndSeparateKeysToObjectMapper","buildValuesAndSeparateKeysToObjectUnmapper","noKeyValue","Symbol","buildPartialRecordArbitrary","recordModel","requiredKeys","keys","arbs","index","length","k","requiredArbitrary","undefined","indexOf","push","nil","map"],"mappings":"AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,qBAAT,QAAsC,uCAAtC;AACA,SAASC,wCAAT,EAAmDC,0CAAnD,QAAsG,6CAAtG;AACA,MAAMC,UAAU,GAAGC,MAAM,CAAC,QAAD,CAAzB;AACA,OAAO,SAASC,2BAAT,CAAqCC,WAArC,EAAkDC,YAAlD,EAAgE;AACnE,QAAMC,IAAI,GAAGR,qBAAqB,CAACM,WAAD,CAAlC;AACA,QAAMG,IAAI,GAAG,EAAb;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,KAAKF,IAAI,CAACG,MAAnC,EAA2C,EAAED,KAA7C,EAAoD;AAChD,UAAME,CAAC,GAAGJ,IAAI,CAACE,KAAD,CAAd;AACA,UAAMG,iBAAiB,GAAGP,WAAW,CAACM,CAAD,CAArC;AACA,QAAIL,YAAY,KAAKO,SAAjB,IAA8BP,YAAY,CAACQ,OAAb,CAAqBH,CAArB,MAA4B,CAAC,CAA/D,EACIH,IAAI,CAACO,IAAL,CAAUH,iBAAV,EADJ,KAGIJ,IAAI,CAACO,IAAL,CAAUlB,MAAM,CAACe,iBAAD,EAAoB;AAAEI,MAAAA,GAAG,EAAEd;AAAP,KAApB,CAAhB;AACP;;AACD,SAAOJ,KAAK,CAAC,GAAGU,IAAJ,CAAL,CAAeS,GAAf,CAAmBjB,wCAAwC,CAACO,IAAD,EAAOL,UAAP,CAA3D,EAA+ED,0CAA0C,CAACM,IAAD,EAAOL,UAAP,CAAzH,CAAP;AACH","sourcesContent":["import { option } from '../../option.js';\nimport { tuple } from '../../tuple.js';\nimport { extractEnumerableKeys } from '../helpers/EnumerableKeysExtractor.js';\nimport { buildValuesAndSeparateKeysToObjectMapper, buildValuesAndSeparateKeysToObjectUnmapper, } from '../mappers/ValuesAndSeparateKeysToObject.js';\nconst noKeyValue = Symbol('no-key');\nexport function buildPartialRecordArbitrary(recordModel, requiredKeys) {\n    const keys = extractEnumerableKeys(recordModel);\n    const arbs = [];\n    for (let index = 0; index !== keys.length; ++index) {\n        const k = keys[index];\n        const requiredArbitrary = recordModel[k];\n        if (requiredKeys === undefined || requiredKeys.indexOf(k) !== -1)\n            arbs.push(requiredArbitrary);\n        else\n            arbs.push(option(requiredArbitrary, { nil: noKeyValue }));\n    }\n    return tuple(...arbs).map(buildValuesAndSeparateKeysToObjectMapper(keys, noKeyValue), buildValuesAndSeparateKeysToObjectUnmapper(keys, noKeyValue));\n}\n"]},"metadata":{},"sourceType":"module"}
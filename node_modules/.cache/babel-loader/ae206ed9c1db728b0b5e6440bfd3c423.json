{"ast":null,"code":"import { CommandsArbitrary } from './_internals/CommandsArbitrary.js';\nimport { maxGeneratedLengthFromSizeForArbitrary, MaxLengthUpperBound } from './_internals/helpers/MaxLengthFromMinLength.js';\n\nfunction commands(commandArbs) {\n  let constraints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    size,\n    maxCommands = MaxLengthUpperBound,\n    disableReplayLog = false,\n    replayPath = null\n  } = constraints;\n  const specifiedMaxCommands = constraints.maxCommands !== undefined;\n  const maxGeneratedCommands = maxGeneratedLengthFromSizeForArbitrary(size, 0, maxCommands, specifiedMaxCommands);\n  return new CommandsArbitrary(commandArbs, maxGeneratedCommands, maxCommands, replayPath, disableReplayLog);\n}\n\nexport { commands };","map":{"version":3,"sources":["U:/NFT-Mar/faucet/node_modules/fast-check/lib/esm/arbitrary/commands.js"],"names":["CommandsArbitrary","maxGeneratedLengthFromSizeForArbitrary","MaxLengthUpperBound","commands","commandArbs","constraints","size","maxCommands","disableReplayLog","replayPath","specifiedMaxCommands","undefined","maxGeneratedCommands"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,mCAAlC;AACA,SAASC,sCAAT,EAAiDC,mBAAjD,QAA6E,gDAA7E;;AACA,SAASC,QAAT,CAAkBC,WAAlB,EAAiD;AAAA,MAAlBC,WAAkB,uEAAJ,EAAI;AAC7C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAW,GAAGL,mBAAtB;AAA2CM,IAAAA,gBAAgB,GAAG,KAA9D;AAAqEC,IAAAA,UAAU,GAAG;AAAlF,MAA2FJ,WAAjG;AACA,QAAMK,oBAAoB,GAAGL,WAAW,CAACE,WAAZ,KAA4BI,SAAzD;AACA,QAAMC,oBAAoB,GAAGX,sCAAsC,CAACK,IAAD,EAAO,CAAP,EAAUC,WAAV,EAAuBG,oBAAvB,CAAnE;AACA,SAAO,IAAIV,iBAAJ,CAAsBI,WAAtB,EAAmCQ,oBAAnC,EAAyDL,WAAzD,EAAsEE,UAAtE,EAAkFD,gBAAlF,CAAP;AACH;;AACD,SAASL,QAAT","sourcesContent":["import { CommandsArbitrary } from './_internals/CommandsArbitrary.js';\nimport { maxGeneratedLengthFromSizeForArbitrary, MaxLengthUpperBound, } from './_internals/helpers/MaxLengthFromMinLength.js';\nfunction commands(commandArbs, constraints = {}) {\n    const { size, maxCommands = MaxLengthUpperBound, disableReplayLog = false, replayPath = null } = constraints;\n    const specifiedMaxCommands = constraints.maxCommands !== undefined;\n    const maxGeneratedCommands = maxGeneratedLengthFromSizeForArbitrary(size, 0, maxCommands, specifiedMaxCommands);\n    return new CommandsArbitrary(commandArbs, maxGeneratedCommands, maxCommands, replayPath, disableReplayLog);\n}\nexport { commands };\n"]},"metadata":{},"sourceType":"module"}
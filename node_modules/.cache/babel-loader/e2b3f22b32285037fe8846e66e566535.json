{"ast":null,"code":"export function keyValuePairsToObjectMapper(items) {\n  const obj = {};\n\n  for (const keyValue of items) {\n    Object.defineProperty(obj, keyValue[0], {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: keyValue[1]\n    });\n  }\n\n  return obj;\n}\n\nfunction buildInvalidPropertyNameFilter(obj) {\n  return function invalidPropertyNameFilter(key) {\n    const descriptor = Object.getOwnPropertyDescriptor(obj, key);\n    return descriptor === undefined || !descriptor.configurable || !descriptor.enumerable || !descriptor.writable || descriptor.get !== undefined || descriptor.set !== undefined;\n  };\n}\n\nexport function keyValuePairsToObjectUnmapper(value) {\n  if (typeof value !== 'object' || value === null) {\n    throw new Error('Incompatible instance received: should be a non-null object');\n  }\n\n  if (!('constructor' in value) || value.constructor !== Object) {\n    throw new Error('Incompatible instance received: should be of exact type Object');\n  }\n\n  if (Object.getOwnPropertySymbols(value).length > 0) {\n    throw new Error('Incompatible instance received: should contain symbols');\n  }\n\n  if (Object.getOwnPropertyNames(value).find(buildInvalidPropertyNameFilter(value)) !== undefined) {\n    throw new Error('Incompatible instance received: should contain only c/e/w properties without get/set');\n  }\n\n  return Object.entries(value);\n}","map":{"version":3,"sources":["U:/NFT-Mar/faucet/node_modules/fast-check/lib/esm/arbitrary/_internals/mappers/KeyValuePairsToObject.js"],"names":["keyValuePairsToObjectMapper","items","obj","keyValue","Object","defineProperty","enumerable","configurable","writable","value","buildInvalidPropertyNameFilter","invalidPropertyNameFilter","key","descriptor","getOwnPropertyDescriptor","undefined","get","set","keyValuePairsToObjectUnmapper","Error","constructor","getOwnPropertySymbols","length","getOwnPropertyNames","find","entries"],"mappings":"AAAA,OAAO,SAASA,2BAAT,CAAqCC,KAArC,EAA4C;AAC/C,QAAMC,GAAG,GAAG,EAAZ;;AACA,OAAK,MAAMC,QAAX,IAAuBF,KAAvB,EAA8B;AAC1BG,IAAAA,MAAM,CAACC,cAAP,CAAsBH,GAAtB,EAA2BC,QAAQ,CAAC,CAAD,CAAnC,EAAwC;AACpCG,MAAAA,UAAU,EAAE,IADwB;AAEpCC,MAAAA,YAAY,EAAE,IAFsB;AAGpCC,MAAAA,QAAQ,EAAE,IAH0B;AAIpCC,MAAAA,KAAK,EAAEN,QAAQ,CAAC,CAAD;AAJqB,KAAxC;AAMH;;AACD,SAAOD,GAAP;AACH;;AACD,SAASQ,8BAAT,CAAwCR,GAAxC,EAA6C;AACzC,SAAO,SAASS,yBAAT,CAAmCC,GAAnC,EAAwC;AAC3C,UAAMC,UAAU,GAAGT,MAAM,CAACU,wBAAP,CAAgCZ,GAAhC,EAAqCU,GAArC,CAAnB;AACA,WAAQC,UAAU,KAAKE,SAAf,IACJ,CAACF,UAAU,CAACN,YADR,IAEJ,CAACM,UAAU,CAACP,UAFR,IAGJ,CAACO,UAAU,CAACL,QAHR,IAIJK,UAAU,CAACG,GAAX,KAAmBD,SAJf,IAKJF,UAAU,CAACI,GAAX,KAAmBF,SALvB;AAMH,GARD;AASH;;AACD,OAAO,SAASG,6BAAT,CAAuCT,KAAvC,EAA8C;AACjD,MAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAA3C,EAAiD;AAC7C,UAAM,IAAIU,KAAJ,CAAU,6DAAV,CAAN;AACH;;AACD,MAAI,EAAE,iBAAiBV,KAAnB,KAA6BA,KAAK,CAACW,WAAN,KAAsBhB,MAAvD,EAA+D;AAC3D,UAAM,IAAIe,KAAJ,CAAU,gEAAV,CAAN;AACH;;AACD,MAAIf,MAAM,CAACiB,qBAAP,CAA6BZ,KAA7B,EAAoCa,MAApC,GAA6C,CAAjD,EAAoD;AAChD,UAAM,IAAIH,KAAJ,CAAU,wDAAV,CAAN;AACH;;AACD,MAAIf,MAAM,CAACmB,mBAAP,CAA2Bd,KAA3B,EAAkCe,IAAlC,CAAuCd,8BAA8B,CAACD,KAAD,CAArE,MAAkFM,SAAtF,EAAiG;AAC7F,UAAM,IAAII,KAAJ,CAAU,sFAAV,CAAN;AACH;;AACD,SAAOf,MAAM,CAACqB,OAAP,CAAehB,KAAf,CAAP;AACH","sourcesContent":["export function keyValuePairsToObjectMapper(items) {\n    const obj = {};\n    for (const keyValue of items) {\n        Object.defineProperty(obj, keyValue[0], {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: keyValue[1],\n        });\n    }\n    return obj;\n}\nfunction buildInvalidPropertyNameFilter(obj) {\n    return function invalidPropertyNameFilter(key) {\n        const descriptor = Object.getOwnPropertyDescriptor(obj, key);\n        return (descriptor === undefined ||\n            !descriptor.configurable ||\n            !descriptor.enumerable ||\n            !descriptor.writable ||\n            descriptor.get !== undefined ||\n            descriptor.set !== undefined);\n    };\n}\nexport function keyValuePairsToObjectUnmapper(value) {\n    if (typeof value !== 'object' || value === null) {\n        throw new Error('Incompatible instance received: should be a non-null object');\n    }\n    if (!('constructor' in value) || value.constructor !== Object) {\n        throw new Error('Incompatible instance received: should be of exact type Object');\n    }\n    if (Object.getOwnPropertySymbols(value).length > 0) {\n        throw new Error('Incompatible instance received: should contain symbols');\n    }\n    if (Object.getOwnPropertyNames(value).find(buildInvalidPropertyNameFilter(value)) !== undefined) {\n        throw new Error('Incompatible instance received: should contain only c/e/w properties without get/set');\n    }\n    return Object.entries(value);\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var SBigInt = typeof BigInt !== 'undefined' ? BigInt : undefined;\nexport function unsafeUniformBigIntDistribution(from, to, rng) {\n  var diff = to - from + SBigInt(1);\n  var MinRng = SBigInt(rng.min());\n  var NumValues = SBigInt(rng.max() - rng.min() + 1);\n  var FinalNumValues = NumValues;\n  var NumIterations = SBigInt(1);\n\n  while (FinalNumValues < diff) {\n    FinalNumValues *= NumValues;\n    ++NumIterations;\n  }\n\n  var MaxAcceptedRandom = FinalNumValues - FinalNumValues % diff;\n\n  while (true) {\n    var value = SBigInt(0);\n\n    for (var num = SBigInt(0); num !== NumIterations; ++num) {\n      var out = rng.unsafeNext();\n      value = NumValues * value + (SBigInt(out) - MinRng);\n    }\n\n    if (value < MaxAcceptedRandom) {\n      var inDiff = value % diff;\n      return inDiff + from;\n    }\n  }\n}","map":{"version":3,"sources":["U:/NFT-Mar/faucet/node_modules/pure-rand/lib/esm/distribution/UnsafeUniformBigIntDistribution.js"],"names":["SBigInt","BigInt","undefined","unsafeUniformBigIntDistribution","from","to","rng","diff","MinRng","min","NumValues","max","FinalNumValues","NumIterations","MaxAcceptedRandom","value","num","out","unsafeNext","inDiff"],"mappings":"AAAA,IAAIA,OAAO,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,SAAvD;AACA,OAAO,SAASC,+BAAT,CAAyCC,IAAzC,EAA+CC,EAA/C,EAAmDC,GAAnD,EAAwD;AAC3D,MAAIC,IAAI,GAAGF,EAAE,GAAGD,IAAL,GAAYJ,OAAO,CAAC,CAAD,CAA9B;AACA,MAAIQ,MAAM,GAAGR,OAAO,CAACM,GAAG,CAACG,GAAJ,EAAD,CAApB;AACA,MAAIC,SAAS,GAAGV,OAAO,CAACM,GAAG,CAACK,GAAJ,KAAYL,GAAG,CAACG,GAAJ,EAAZ,GAAwB,CAAzB,CAAvB;AACA,MAAIG,cAAc,GAAGF,SAArB;AACA,MAAIG,aAAa,GAAGb,OAAO,CAAC,CAAD,CAA3B;;AACA,SAAOY,cAAc,GAAGL,IAAxB,EAA8B;AAC1BK,IAAAA,cAAc,IAAIF,SAAlB;AACA,MAAEG,aAAF;AACH;;AACD,MAAIC,iBAAiB,GAAGF,cAAc,GAAIA,cAAc,GAAGL,IAA3D;;AACA,SAAO,IAAP,EAAa;AACT,QAAIQ,KAAK,GAAGf,OAAO,CAAC,CAAD,CAAnB;;AACA,SAAK,IAAIgB,GAAG,GAAGhB,OAAO,CAAC,CAAD,CAAtB,EAA2BgB,GAAG,KAAKH,aAAnC,EAAkD,EAAEG,GAApD,EAAyD;AACrD,UAAIC,GAAG,GAAGX,GAAG,CAACY,UAAJ,EAAV;AACAH,MAAAA,KAAK,GAAGL,SAAS,GAAGK,KAAZ,IAAqBf,OAAO,CAACiB,GAAD,CAAP,GAAeT,MAApC,CAAR;AACH;;AACD,QAAIO,KAAK,GAAGD,iBAAZ,EAA+B;AAC3B,UAAIK,MAAM,GAAGJ,KAAK,GAAGR,IAArB;AACA,aAAOY,MAAM,GAAGf,IAAhB;AACH;AACJ;AACJ","sourcesContent":["var SBigInt = typeof BigInt !== 'undefined' ? BigInt : undefined;\nexport function unsafeUniformBigIntDistribution(from, to, rng) {\n    var diff = to - from + SBigInt(1);\n    var MinRng = SBigInt(rng.min());\n    var NumValues = SBigInt(rng.max() - rng.min() + 1);\n    var FinalNumValues = NumValues;\n    var NumIterations = SBigInt(1);\n    while (FinalNumValues < diff) {\n        FinalNumValues *= NumValues;\n        ++NumIterations;\n    }\n    var MaxAcceptedRandom = FinalNumValues - (FinalNumValues % diff);\n    while (true) {\n        var value = SBigInt(0);\n        for (var num = SBigInt(0); num !== NumIterations; ++num) {\n            var out = rng.unsafeNext();\n            value = NumValues * value + (SBigInt(out) - MinRng);\n        }\n        if (value < MaxAcceptedRandom) {\n            var inDiff = value % diff;\n            return inDiff + from;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { SubarrayArbitrary } from './_internals/SubarrayArbitrary.js';\nexport function subarray(originalArray) {\n  let constraints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    minLength = 0,\n    maxLength = originalArray.length\n  } = constraints;\n  return new SubarrayArbitrary(originalArray, true, minLength, maxLength);\n}","map":{"version":3,"sources":["U:/NFT-Mar/faucet/node_modules/fast-check/lib/esm/arbitrary/subarray.js"],"names":["SubarrayArbitrary","subarray","originalArray","constraints","minLength","maxLength","length"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,mCAAlC;AACA,OAAO,SAASC,QAAT,CAAkBC,aAAlB,EAAmD;AAAA,MAAlBC,WAAkB,uEAAJ,EAAI;AACtD,QAAM;AAAEC,IAAAA,SAAS,GAAG,CAAd;AAAiBC,IAAAA,SAAS,GAAGH,aAAa,CAACI;AAA3C,MAAsDH,WAA5D;AACA,SAAO,IAAIH,iBAAJ,CAAsBE,aAAtB,EAAqC,IAArC,EAA2CE,SAA3C,EAAsDC,SAAtD,CAAP;AACH","sourcesContent":["import { SubarrayArbitrary } from './_internals/SubarrayArbitrary.js';\nexport function subarray(originalArray, constraints = {}) {\n    const { minLength = 0, maxLength = originalArray.length } = constraints;\n    return new SubarrayArbitrary(originalArray, true, minLength, maxLength);\n}\n"]},"metadata":{},"sourceType":"module"}
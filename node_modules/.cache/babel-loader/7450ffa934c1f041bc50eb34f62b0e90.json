{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BadResponseTypeError = exports.TypeMismatchError = exports.NoUniqueBestOverloadError = exports.NoOverloadsMatchedError = void 0;\n\nconst Format = __importStar(require(\"../format\"));\n/**\n * This error indicates that no overloads matched when performing\n * overload resolution.  If there was only one plausible match,\n * a [[TypeMismatchError]] will be thrown instead.\n * @category Errors\n */\n\n\nclass NoOverloadsMatchedError extends Error {\n  constructor(methods, inputs, userDefinedTypes) {\n    const message = \"Arguments provided did not match any overload\";\n    super(message);\n    this.methods = methods;\n    this.inputs = inputs;\n    this.userDefinedTypes = userDefinedTypes;\n    this.name = \"NoOverloadsMatchedError\";\n  }\n\n}\n\nexports.NoOverloadsMatchedError = NoOverloadsMatchedError;\n/**\n * This error indicates that multiple overloads matched during\n * overload resolution, but none of them was the unique best\n * overload.\n * @category Errors\n */\n\nclass NoUniqueBestOverloadError extends Error {\n  constructor(resolutions) {\n    const message = \"Could not determine a unique best overload for the given arguments.  \" + \"Please specify the overload explicitly or give the arguments more explicit types.\";\n    super(message);\n    this.resolutions = resolutions;\n    this.name = \"NoUniqueBestOverloadError\";\n  }\n\n}\n\nexports.NoUniqueBestOverloadError = NoUniqueBestOverloadError;\n/**\n * This error indicates that the given input could not be recognized as the\n * type it was supposed to be.\n * @category Errors\n */\n\nclass TypeMismatchError extends Error {\n  constructor(dataType, input, variableName, specificity, reason) {\n    const message = `Could not interpret input for ${variableName} as type ${Format.Types.typeString(dataType)}.  Reason: ${reason}`;\n    super(message);\n    this.variableName = variableName;\n    this.dataType = dataType;\n    this.input = input;\n    this.reason = reason;\n    this.specificity = specificity;\n    this.name = \"TypeMismatchError\";\n  }\n\n}\n\nexports.TypeMismatchError = TypeMismatchError;\n\nclass BadResponseTypeError extends Error {\n  constructor(request, response) {\n    const message = `Got response type ${response.kind} to request type ${request.kind}`;\n    super(message);\n    this.request = request;\n    this.response = response;\n    this.name = \"BadResponseTypeError\";\n  }\n\n}\n\nexports.BadResponseTypeError = BadResponseTypeError;","map":{"version":3,"sources":["../../../lib/wrap/errors.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;AAEA;;;;;AAKG;;;AACH,MAAa,uBAAb,SAA6C,KAA7C,CAAkD;AAIhD,EAAA,WAAA,CACE,OADF,EAEE,MAFF,EAGE,gBAHF,EAG0C;AAExC,UAAM,OAAO,GAAG,+CAAhB;AACA,UAAM,OAAN;AACA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,gBAAL,GAAwB,gBAAxB;AACA,SAAK,IAAL,GAAY,yBAAZ;AACD;;AAf+C;;AAAlD,OAAA,CAAA,uBAAA,GAAA,uBAAA;AAkBA;;;;;AAKG;;AACH,MAAa,yBAAb,SAA+C,KAA/C,CAAoD;AAElD,EAAA,WAAA,CAAY,WAAZ,EAAqC;AACnC,UAAM,OAAO,GACX,0EACA,mFAFF;AAGA,UAAM,OAAN;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,IAAL,GAAY,2BAAZ;AACD;;AATiD;;AAApD,OAAA,CAAA,yBAAA,GAAA,yBAAA;AAYA;;;;AAIG;;AACH,MAAa,iBAAb,SAAuC,KAAvC,CAA4C;AAyB1C,EAAA,WAAA,CACE,QADF,EAEE,KAFF,EAGE,YAHF,EAIE,WAJF,EAKE,MALF,EAKgB;AAEd,UAAM,OAAO,GAAG,iCAAiC,YAAY,YAAY,MAAM,CAAC,KAAP,CAAa,UAAb,CACvE,QADuE,CAExE,cAAc,MAAM,EAFrB;AAGA,UAAM,OAAN;AACA,SAAK,YAAL,GAAoB,YAApB;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,IAAL,GAAY,mBAAZ;AACD;;AA1CyC;;AAA5C,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AA6CA,MAAa,oBAAb,SAA0C,KAA1C,CAA+C;AAI7C,EAAA,WAAA,CAAY,OAAZ,EAAkC,QAAlC,EAAwD;AACtD,UAAM,OAAO,GAAG,qBAAqB,QAAQ,CAAC,IAAI,oBAAoB,OAAO,CAAC,IAAI,EAAlF;AACA,UAAM,OAAN;AACA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,IAAL,GAAY,sBAAZ;AACD;;AAV4C;;AAA/C,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BadResponseTypeError = exports.TypeMismatchError = exports.NoUniqueBestOverloadError = exports.NoOverloadsMatchedError = void 0;\nconst Format = __importStar(require(\"../format\"));\n/**\n * This error indicates that no overloads matched when performing\n * overload resolution.  If there was only one plausible match,\n * a [[TypeMismatchError]] will be thrown instead.\n * @category Errors\n */\nclass NoOverloadsMatchedError extends Error {\n    constructor(methods, inputs, userDefinedTypes) {\n        const message = \"Arguments provided did not match any overload\";\n        super(message);\n        this.methods = methods;\n        this.inputs = inputs;\n        this.userDefinedTypes = userDefinedTypes;\n        this.name = \"NoOverloadsMatchedError\";\n    }\n}\nexports.NoOverloadsMatchedError = NoOverloadsMatchedError;\n/**\n * This error indicates that multiple overloads matched during\n * overload resolution, but none of them was the unique best\n * overload.\n * @category Errors\n */\nclass NoUniqueBestOverloadError extends Error {\n    constructor(resolutions) {\n        const message = \"Could not determine a unique best overload for the given arguments.  \" +\n            \"Please specify the overload explicitly or give the arguments more explicit types.\";\n        super(message);\n        this.resolutions = resolutions;\n        this.name = \"NoUniqueBestOverloadError\";\n    }\n}\nexports.NoUniqueBestOverloadError = NoUniqueBestOverloadError;\n/**\n * This error indicates that the given input could not be recognized as the\n * type it was supposed to be.\n * @category Errors\n */\nclass TypeMismatchError extends Error {\n    constructor(dataType, input, variableName, specificity, reason) {\n        const message = `Could not interpret input for ${variableName} as type ${Format.Types.typeString(dataType)}.  Reason: ${reason}`;\n        super(message);\n        this.variableName = variableName;\n        this.dataType = dataType;\n        this.input = input;\n        this.reason = reason;\n        this.specificity = specificity;\n        this.name = \"TypeMismatchError\";\n    }\n}\nexports.TypeMismatchError = TypeMismatchError;\nclass BadResponseTypeError extends Error {\n    constructor(request, response) {\n        const message = `Got response type ${response.kind} to request type ${request.kind}`;\n        super(message);\n        this.request = request;\n        this.response = response;\n        this.name = \"BadResponseTypeError\";\n    }\n}\nexports.BadResponseTypeError = BadResponseTypeError;\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"script"}
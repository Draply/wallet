{"ast":null,"code":"var _jsxFileName = \"U:\\\\NFT-Mar\\\\faucet\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Web3 from \"web3\";\nimport { useCallback, useState, useEffect } from 'react';\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { loadContract } from \"./utils/load-contract\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [web3Api, setWeb3Api] = useState({\n    provider: null,\n    web3: null,\n    contract: null\n  });\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [shouldReload, reload] = useState(false);\n\n  const reloadEffect = () => reload(!shouldReload);\n\n  const setAccountLister = provider => {\n    provider.on(\"accountChanged\", accounts => setAccount(accounts[0]));\n  };\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      const provider = await detectEthereumProvider();\n      const contract = await loadContract(\"Faucet\", provider);\n      debugger;\n\n      if (provider) {\n        setAccountLister(provider);\n        setWeb3Api({\n          web3: new Web3(provider),\n          provider,\n          contract\n        });\n      } else {\n        console.error(\"please, Install Metamask\");\n      }\n    };\n\n    loadProvider();\n  }, []);\n  useEffect(() => {\n    const getAccount = async () => {\n      const accounts = await web3Api.web3.eth.getAccounts();\n      setAccount(accounts[5]);\n    };\n\n    web3Api.web3 && getAccount() && reloadEffect();\n  }, [web3Api.web3]);\n  useEffect(() => {\n    const loadBalance = async () => {\n      const {\n        contract,\n        web3\n      } = web3Api;\n      const balance = await web3.eth.getBalance(contract.address);\n      setBalance(web3.utils.fromWei(balance, \"ether\"));\n    };\n\n    web3Api.contract && loadBalance();\n  }, [web3Api, shouldReload]);\n  const addFunds = useCallback(async () => {\n    const {\n      contract,\n      web3\n    } = web3Api;\n    await contract.addFunds({\n      from: account,\n      value: web3.utils.toWei(\"1\", \"ether\")\n    });\n    reloadEffect();\n  }, [web3Api, account]);\n\n  const withdraw = async () => {\n    const {\n      contract,\n      web3\n    } = web3Api;\n    const withdrawAmount = web3.utils.toWei(\"0.5\", \"ether\");\n    await contract.withdraw(withdrawAmount, {\n      from: account\n    });\n    reloadEffect();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"faucet-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faucet\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-view is-size-2\",\n        children: [\"Current Balance: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: balance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 28\n        }, this), \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary mr-5\",\n        onClick: addFunds,\n        children: \"Donate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-danger mr-5\",\n        onClick: withdraw,\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-link\",\n        onClick: () => web3Api.provider.request({\n          method: \"eth_requestAccounts\"\n        }),\n        children: \"Connect Wallets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Accounts Address: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), account ? account : \"Accounts Denined\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jlMSXtzqYK/3FAZ+cgoaNTxJykw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["U:/NFT-Mar/faucet/src/App.js"],"names":["Web3","useCallback","useState","useEffect","detectEthereumProvider","loadContract","App","web3Api","setWeb3Api","provider","web3","contract","account","setAccount","balance","setBalance","shouldReload","reload","reloadEffect","setAccountLister","on","accounts","loadProvider","console","error","getAccount","eth","getAccounts","loadBalance","getBalance","address","utils","fromWei","addFunds","from","value","toWei","withdraw","withdrawAmount","request","method"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport Web3 from \"web3\";\r\nimport { useCallback, useState, useEffect } from 'react';\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport { loadContract } from \"./utils/load-contract\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [web3Api, setWeb3Api] = useState({\r\n    provider: null,\r\n    web3: null,\r\n    contract: null,\r\n  });\r\n\r\n  const [account, setAccount] = useState(null);\r\n  const [balance, setBalance] = useState(null);\r\n\r\n  const [shouldReload, reload] = useState(false);\r\n  const reloadEffect = () => reload(!shouldReload)\r\n\r\n  const setAccountLister = (provider) => {\r\n    provider.on(\"accountChanged\", accounts => setAccount(accounts[0]))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const loadProvider = async () => {\r\n      const provider = await detectEthereumProvider()\r\n      const contract = await loadContract(\"Faucet\", provider)\r\n\r\n      debugger\r\n\r\n      if (provider) {\r\n        setAccountLister(provider)\r\n        setWeb3Api({\r\n          web3: new Web3(provider),\r\n          provider,\r\n          contract\r\n        })\r\n      } else {\r\n        console.error(\"please, Install Metamask\")\r\n      }\r\n    }\r\n    loadProvider()\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getAccount = async () => {\r\n      const accounts = await web3Api.web3.eth.getAccounts()\r\n      setAccount(accounts[5])\r\n    }\r\n    web3Api.web3 && getAccount() && reloadEffect()\r\n  }, [web3Api.web3]);\r\n\r\n  useEffect(() => {\r\n    const loadBalance = async () => {\r\n      const { contract, web3 } = web3Api\r\n      const balance = await web3.eth.getBalance(contract.address)\r\n      setBalance(web3.utils.fromWei(balance, \"ether\"))\r\n\r\n    }\r\n    web3Api.contract && loadBalance()\r\n  }, [web3Api, shouldReload]);\r\n\r\n  const addFunds = useCallback(async () => {\r\n    const { contract, web3 } = web3Api\r\n    await contract.addFunds({\r\n      from: account,\r\n      value: web3.utils.toWei(\"1\", \"ether\")\r\n    })\r\n    reloadEffect()\r\n  }, [web3Api, account])\r\n\r\n\r\n  const withdraw = async () => {\r\n    const { contract, web3 } = web3Api\r\n    const withdrawAmount = web3.utils.toWei(\"0.5\", \"ether\")\r\n    await contract.withdraw(withdrawAmount, {\r\n      from: account\r\n    })\r\n    reloadEffect()\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"faucet-wrapper\">\r\n      <div className=\"faucet\">\r\n        <div className=\"balance-view is-size-2\">\r\n          Current Balance: <strong>{balance}</strong> ETH\r\n        </div>\r\n        <button className=\"button is-primary mr-5\"\r\n          onClick={addFunds}\r\n        >Donate</button>\r\n        <button className=\"button is-danger mr-5\"\r\n          onClick={withdraw}\r\n        >Withdraw</button>\r\n        <button className=\"button is-link\"\r\n          onClick={() =>\r\n            web3Api.provider.request({ method: \"eth_requestAccounts\" })\r\n          }\r\n        >\r\n          Connect Wallets\r\n        </button>\r\n        <span>\r\n          <p>\r\n            <strong>Accounts Address: </strong>\r\n            {\r\n              account ? account : \"Accounts Denined\"\r\n            }\r\n          </p>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { assertIsArbitrary } from '../arbitrary/definition/Arbitrary.js';\nimport { tuple } from '../../arbitrary/tuple.js';\nimport { AsyncProperty } from './AsyncProperty.generic.js';\nimport { AlwaysShrinkableArbitrary } from '../../arbitrary/_internals/AlwaysShrinkableArbitrary.js';\n\nfunction asyncProperty() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length < 2) {\n    throw new Error('asyncProperty expects at least two parameters');\n  }\n\n  const arbs = args.slice(0, args.length - 1);\n  const p = args[args.length - 1];\n  arbs.forEach(assertIsArbitrary);\n  const mappedArbs = arbs.map(arb => new AlwaysShrinkableArbitrary(arb));\n  return new AsyncProperty(tuple(...mappedArbs), t => p(...t));\n}\n\nexport { asyncProperty };","map":{"version":3,"sources":["U:/NFT-Mar/faucet/node_modules/fast-check/lib/esm/check/property/AsyncProperty.js"],"names":["assertIsArbitrary","tuple","AsyncProperty","AlwaysShrinkableArbitrary","asyncProperty","args","length","Error","arbs","slice","p","forEach","mappedArbs","map","arb","t"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,sCAAlC;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,aAAT,QAA+B,4BAA/B;AACA,SAASC,yBAAT,QAA0C,yDAA1C;;AACA,SAASC,aAAT,GAAgC;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAC5B,MAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACjB,UAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACH;;AACD,QAAMC,IAAI,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,EAAcJ,IAAI,CAACC,MAAL,GAAc,CAA5B,CAAb;AACA,QAAMI,CAAC,GAAGL,IAAI,CAACA,IAAI,CAACC,MAAL,GAAc,CAAf,CAAd;AACAE,EAAAA,IAAI,CAACG,OAAL,CAAaX,iBAAb;AACA,QAAMY,UAAU,GAAGJ,IAAI,CAACK,GAAL,CAAUC,GAAD,IAAS,IAAIX,yBAAJ,CAA8BW,GAA9B,CAAlB,CAAnB;AACA,SAAO,IAAIZ,aAAJ,CAAkBD,KAAK,CAAC,GAAGW,UAAJ,CAAvB,EAAyCG,CAAD,IAAOL,CAAC,CAAC,GAAGK,CAAJ,CAAhD,CAAP;AACH;;AACD,SAASX,aAAT","sourcesContent":["import { assertIsArbitrary } from '../arbitrary/definition/Arbitrary.js';\nimport { tuple } from '../../arbitrary/tuple.js';\nimport { AsyncProperty, } from './AsyncProperty.generic.js';\nimport { AlwaysShrinkableArbitrary } from '../../arbitrary/_internals/AlwaysShrinkableArbitrary.js';\nfunction asyncProperty(...args) {\n    if (args.length < 2) {\n        throw new Error('asyncProperty expects at least two parameters');\n    }\n    const arbs = args.slice(0, args.length - 1);\n    const p = args[args.length - 1];\n    arbs.forEach(assertIsArbitrary);\n    const mappedArbs = arbs.map((arb) => new AlwaysShrinkableArbitrary(arb));\n    return new AsyncProperty(tuple(...mappedArbs), (t) => p(...t));\n}\nexport { asyncProperty };\n"]},"metadata":{},"sourceType":"module"}